### YamlMime:ManagedReference
items:
- uid: Assets.Scripts.Debug.show_animation
  commentId: T:Assets.Scripts.Debug.show_animation
  id: show_animation
  parent: Assets.Scripts.Debug
  children:
  - Assets.Scripts.Debug.show_animation.animation_play_list
  - Assets.Scripts.Debug.show_animation.DoThings(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}})
  - Assets.Scripts.Debug.show_animation.get_damaged(GameObject)
  - Assets.Scripts.Debug.show_animation.play_target_animation(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}},System.Boolean)
  langs:
  - csharp
  - vb
  name: show_animation
  nameWithType: show_animation
  fullName: Assets.Scripts.Debug.show_animation
  type: Class
  source:
    id: show_animation
    path: ''
    startLine: 154915
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Debug
  summary: "\n展示动画\n"
  example: []
  syntax:
    content: 'public class show_animation : MonoBehaviour'
    content.vb: >-
      Public Class show_animation
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Assets.Scripts.Debug.show_animation.animation_play_list
  commentId: F:Assets.Scripts.Debug.show_animation.animation_play_list
  id: animation_play_list
  parent: Assets.Scripts.Debug.show_animation
  langs:
  - csharp
  - vb
  name: animation_play_list
  nameWithType: show_animation.animation_play_list
  fullName: Assets.Scripts.Debug.show_animation.animation_play_list
  type: Field
  source:
    id: animation_play_list
    path: ''
    startLine: 154918
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Debug
  syntax:
    content: public Queue<anime_tuple> animation_play_list
    return:
      type: System.Collections.Generic.Queue{Assets.Scripts.Debug.anime_tuple}
    content.vb: Public animation_play_list As Queue(Of anime_tuple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Assets.Scripts.Debug.show_animation.DoThings(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}})
  commentId: M:Assets.Scripts.Debug.show_animation.DoThings(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}})
  id: DoThings(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}})
  parent: Assets.Scripts.Debug.show_animation
  langs:
  - csharp
  - vb
  name: DoThings(GameObject, Dictionary<String, List<Effect_tuple>>, Action<List<Effect_tuple>>)
  nameWithType: show_animation.DoThings(GameObject, Dictionary<String, List<Effect_tuple>>, Action<List<Effect_tuple>>)
  fullName: Assets.Scripts.Debug.show_animation.DoThings(GameObject, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<Effect_tuple>>, Action<System.Collections.Generic.List<Effect_tuple>>)
  type: Method
  source:
    id: DoThings
    path: ''
    startLine: 154949
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Debug
  summary: "\n依次展示动画，最后回归idle动画\n"
  example: []
  syntax:
    content: public void DoThings(GameObject gameObj, Dictionary<string, List<Effect_tuple>> animation_dict, Action<List<Effect_tuple>> effect_callback)
    parameters:
    - id: gameObj
      type: Global.GameObject
      description: ''
    - id: animation_dict
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}}
      description: 需要展示的动作
    - id: effect_callback
      type: Global.Action{System.Collections.Generic.List{Effect_tuple}}
      description: 在展示动画之后，执行此函数。比如实现各种效果
    content.vb: Public Sub DoThings(gameObj As GameObject, animation_dict As Dictionary(Of String, List(Of Effect_tuple)), effect_callback As Action(Of List(Of Effect_tuple)))
  overload: Assets.Scripts.Debug.show_animation.DoThings*
  nameWithType.vb: show_animation.DoThings(GameObject, Dictionary(Of String, List(Of Effect_tuple)), Action(Of List(Of Effect_tuple)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Assets.Scripts.Debug.show_animation.DoThings(GameObject, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of Effect_tuple)), Action(Of System.Collections.Generic.List(Of Effect_tuple)))
  name.vb: DoThings(GameObject, Dictionary(Of String, List(Of Effect_tuple)), Action(Of List(Of Effect_tuple)))
- uid: Assets.Scripts.Debug.show_animation.play_target_animation(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}},System.Boolean)
  commentId: M:Assets.Scripts.Debug.show_animation.play_target_animation(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}},System.Boolean)
  id: play_target_animation(GameObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}},Action{System.Collections.Generic.List{Effect_tuple}},System.Boolean)
  parent: Assets.Scripts.Debug.show_animation
  langs:
  - csharp
  - vb
  name: play_target_animation(GameObject, Dictionary<String, List<Effect_tuple>>, Action<List<Effect_tuple>>, Boolean)
  nameWithType: show_animation.play_target_animation(GameObject, Dictionary<String, List<Effect_tuple>>, Action<List<Effect_tuple>>, Boolean)
  fullName: Assets.Scripts.Debug.show_animation.play_target_animation(GameObject, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<Effect_tuple>>, Action<System.Collections.Generic.List<Effect_tuple>>, System.Boolean)
  type: Method
  source:
    id: play_target_animation
    path: ''
    startLine: 155005
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Debug
  summary: "\n展示目标动画\n"
  example: []
  syntax:
    content: public void play_target_animation(GameObject gameObj, Dictionary<string, List<Effect_tuple>> animation_dict, Action<List<Effect_tuple>> effect_callback, bool is_enemy_anime = false)
    parameters:
    - id: gameObj
      type: Global.GameObject
      description: ''
    - id: animation_dict
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}}
      description: ''
    - id: effect_callback
      type: Global.Action{System.Collections.Generic.List{Effect_tuple}}
      description: ''
    - id: is_enemy_anime
      type: System.Boolean
    content.vb: Public Sub play_target_animation(gameObj As GameObject, animation_dict As Dictionary(Of String, List(Of Effect_tuple)), effect_callback As Action(Of List(Of Effect_tuple)), is_enemy_anime As Boolean = False)
  overload: Assets.Scripts.Debug.show_animation.play_target_animation*
  nameWithType.vb: show_animation.play_target_animation(GameObject, Dictionary(Of String, List(Of Effect_tuple)), Action(Of List(Of Effect_tuple)), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Assets.Scripts.Debug.show_animation.play_target_animation(GameObject, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of Effect_tuple)), Action(Of System.Collections.Generic.List(Of Effect_tuple)), System.Boolean)
  name.vb: play_target_animation(GameObject, Dictionary(Of String, List(Of Effect_tuple)), Action(Of List(Of Effect_tuple)), Boolean)
- uid: Assets.Scripts.Debug.show_animation.get_damaged(GameObject)
  commentId: M:Assets.Scripts.Debug.show_animation.get_damaged(GameObject)
  id: get_damaged(GameObject)
  parent: Assets.Scripts.Debug.show_animation
  langs:
  - csharp
  - vb
  name: get_damaged(GameObject)
  nameWithType: show_animation.get_damaged(GameObject)
  fullName: Assets.Scripts.Debug.show_animation.get_damaged(GameObject)
  type: Method
  source:
    id: get_damaged
    path: ''
    startLine: 155104
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Debug
  syntax:
    content: public void get_damaged(GameObject gameObj)
    parameters:
    - id: gameObj
      type: Global.GameObject
    content.vb: Public Sub get_damaged(gameObj As GameObject)
  overload: Assets.Scripts.Debug.show_animation.get_damaged*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Assets.Scripts.Debug
  commentId: N:Assets.Scripts.Debug
  name: Assets.Scripts.Debug
  nameWithType: Assets.Scripts.Debug
  fullName: Assets.Scripts.Debug
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Queue{Assets.Scripts.Debug.anime_tuple}
  commentId: T:System.Collections.Generic.Queue{Assets.Scripts.Debug.anime_tuple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Queue`1
  name: Queue<anime_tuple>
  nameWithType: Queue<anime_tuple>
  fullName: System.Collections.Generic.Queue<Assets.Scripts.Debug.anime_tuple>
  nameWithType.vb: Queue(Of anime_tuple)
  fullName.vb: System.Collections.Generic.Queue(Of Assets.Scripts.Debug.anime_tuple)
  name.vb: Queue(Of anime_tuple)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Assets.Scripts.Debug.anime_tuple
    name: anime_tuple
    nameWithType: anime_tuple
    fullName: Assets.Scripts.Debug.anime_tuple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Assets.Scripts.Debug.anime_tuple
    name: anime_tuple
    nameWithType: anime_tuple
    fullName: Assets.Scripts.Debug.anime_tuple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1
  commentId: T:System.Collections.Generic.Queue`1
  isExternal: true
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Assets.Scripts.Debug.show_animation.DoThings*
  commentId: Overload:Assets.Scripts.Debug.show_animation.DoThings
  name: DoThings
  nameWithType: show_animation.DoThings
  fullName: Assets.Scripts.Debug.show_animation.DoThings
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Effect_tuple}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<Effect_tuple>>
  nameWithType: Dictionary<String, List<Effect_tuple>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<Effect_tuple>>
  nameWithType.vb: Dictionary(Of String, List(Of Effect_tuple))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of Effect_tuple))
  name.vb: Dictionary(Of String, List(Of Effect_tuple))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Effect_tuple
    name: Effect_tuple
    nameWithType: Effect_tuple
    fullName: Effect_tuple
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Effect_tuple
    name: Effect_tuple
    nameWithType: Effect_tuple
    fullName: Effect_tuple
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action{System.Collections.Generic.List{Effect_tuple}}
  commentId: '!:Global.Action{System.Collections.Generic.List{Effect_tuple}}'
  definition: Global.Action`1
  name: Action<List<Effect_tuple>>
  nameWithType: Action<List<Effect_tuple>>
  fullName: Action<System.Collections.Generic.List<Effect_tuple>>
  nameWithType.vb: Action(Of List(Of Effect_tuple))
  fullName.vb: Action(Of System.Collections.Generic.List(Of Effect_tuple))
  name.vb: Action(Of List(Of Effect_tuple))
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Effect_tuple
    name: Effect_tuple
    nameWithType: Effect_tuple
    fullName: Effect_tuple
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Effect_tuple
    name: Effect_tuple
    nameWithType: Effect_tuple
    fullName: Effect_tuple
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Assets.Scripts.Debug.show_animation.play_target_animation*
  commentId: Overload:Assets.Scripts.Debug.show_animation.play_target_animation
  name: play_target_animation
  nameWithType: show_animation.play_target_animation
  fullName: Assets.Scripts.Debug.show_animation.play_target_animation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Assets.Scripts.Debug.show_animation.get_damaged*
  commentId: Overload:Assets.Scripts.Debug.show_animation.get_damaged
  name: get_damaged
  nameWithType: show_animation.get_damaged
  fullName: Assets.Scripts.Debug.show_animation.get_damaged
