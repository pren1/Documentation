### YamlMime:ManagedReference
items:
- uid: Assets.Scripts.Cards.Card_readin_util
  commentId: T:Assets.Scripts.Cards.Card_readin_util
  id: Card_readin_util
  parent: Assets.Scripts.Cards
  children:
  - Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list
  - Assets.Scripts.Cards.Card_readin_util.process_basic_cards(System.Collections.Generic.List{basic_card})
  langs:
  - csharp
  - vb
  name: Card_readin_util
  nameWithType: Card_readin_util
  fullName: Assets.Scripts.Cards.Card_readin_util
  type: Class
  source:
    id: Card_readin_util
    path: ''
    startLine: 152081
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Cards
  summary: "\n战斗场景加载卡牌\n"
  example: []
  syntax:
    content: public static class Card_readin_util
    content.vb: Public Module Card_readin_util
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list
  commentId: M:Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list
  id: Get_in_battle_member_list
  parent: Assets.Scripts.Cards.Card_readin_util
  langs:
  - csharp
  - vb
  name: Get_in_battle_member_list()
  nameWithType: Card_readin_util.Get_in_battle_member_list()
  fullName: Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list()
  type: Method
  source:
    id: Get_in_battle_member_list
    path: ''
    startLine: 152108
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Cards
  summary: "\n返回所有选择过的上场角色\n"
  example: []
  syntax:
    content: public static List<string> Get_in_battle_member_list()
    return:
      type: System.Collections.Generic.List{System.String}
      description: ''
    content.vb: Public Shared Function Get_in_battle_member_list As List(Of String)
  overload: Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Assets.Scripts.Cards.Card_readin_util.process_basic_cards(System.Collections.Generic.List{basic_card})
  commentId: M:Assets.Scripts.Cards.Card_readin_util.process_basic_cards(System.Collections.Generic.List{basic_card})
  id: process_basic_cards(System.Collections.Generic.List{basic_card})
  parent: Assets.Scripts.Cards.Card_readin_util
  langs:
  - csharp
  - vb
  name: process_basic_cards(List<basic_card>)
  nameWithType: Card_readin_util.process_basic_cards(List<basic_card>)
  fullName: Assets.Scripts.Cards.Card_readin_util.process_basic_cards(System.Collections.Generic.List<basic_card>)
  type: Method
  source:
    id: process_basic_cards
    path: ''
    startLine: 152123
  assemblies:
  - cs.temp.dll
  namespace: Assets.Scripts.Cards
  summary: "\n返回本场将要使用的所有卡牌\n"
  example: []
  syntax:
    content: public static List<basic_card> process_basic_cards(List<basic_card> basic_Cards)
    parameters:
    - id: basic_Cards
      type: System.Collections.Generic.List{basic_card}
      description: ''
    return:
      type: System.Collections.Generic.List{basic_card}
      description: ''
    content.vb: Public Shared Function process_basic_cards(basic_Cards As List(Of basic_card)) As List(Of basic_card)
  overload: Assets.Scripts.Cards.Card_readin_util.process_basic_cards*
  nameWithType.vb: Card_readin_util.process_basic_cards(List(Of basic_card))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Assets.Scripts.Cards.Card_readin_util.process_basic_cards(System.Collections.Generic.List(Of basic_card))
  name.vb: process_basic_cards(List(Of basic_card))
references:
- uid: Assets.Scripts.Cards
  commentId: N:Assets.Scripts.Cards
  name: Assets.Scripts.Cards
  nameWithType: Assets.Scripts.Cards
  fullName: Assets.Scripts.Cards
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list*
  commentId: Overload:Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list
  name: Get_in_battle_member_list
  nameWithType: Card_readin_util.Get_in_battle_member_list
  fullName: Assets.Scripts.Cards.Card_readin_util.Get_in_battle_member_list
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Assets.Scripts.Cards.Card_readin_util.process_basic_cards*
  commentId: Overload:Assets.Scripts.Cards.Card_readin_util.process_basic_cards
  name: process_basic_cards
  nameWithType: Card_readin_util.process_basic_cards
  fullName: Assets.Scripts.Cards.Card_readin_util.process_basic_cards
- uid: System.Collections.Generic.List{basic_card}
  commentId: T:System.Collections.Generic.List{basic_card}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<basic_card>
  nameWithType: List<basic_card>
  fullName: System.Collections.Generic.List<basic_card>
  nameWithType.vb: List(Of basic_card)
  fullName.vb: System.Collections.Generic.List(Of basic_card)
  name.vb: List(Of basic_card)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.basic_card
    name: basic_card
    nameWithType: basic_card
    fullName: basic_card
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.basic_card
    name: basic_card
    nameWithType: basic_card
    fullName: basic_card
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
